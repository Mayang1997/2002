rem单位普及
    rem和em一样也是相对长度单位，但是不一样的是rem始终都是相对html根元素。这样有个很大的优点就是使用rem后不会受到对象内文本字体尺寸的影响，而且只需要改变根元素就能改变所有的字体大小。兼容性也是不错的，IE8以上版本和其他浏览器都已经支持，是个做响应式页面的好选择
常见的单位：
        px
        em
        pt  ( 磅 )
        deg (度数)
        %
rem  
    [ 相对大小的单位 ]
    [ 相对于根元素的html  font-size的大小 ]
    [ 默认状态：1rem == 16px ]

在根元素html中设置font-size能到达统一快捷的优点,但是如果单一的用rem和媒体查询去适配移动端是不灵活的,因为媒体查询需要到一个范围才会变化，在范围内的时候却不会变,且rem设置的font-szie值是固定的,无法根据视口的改变而改变,计算也不方便,恰好我们的需求是需求就是窗口大一点内容就大一点。

    /* html{ */
            /* font-size:100px; */
            /* 1rem == 100px */
            /* 给html设置font-size  目的：为了给rem确定比例*/
            /* 为了方便计算：把html的font-size值设置为100px */
            /* 设置100px 目的：方便计算。 但是100px 不会发生变化， */
        /* } */
    如果用媒体查询取更改html的font-size值弊端：
            
            1：相对( 设置范围 )更改了html的font-size ，达不到最佳的适配效果
            2：font-size值不方便计算

良好的适配方案一:rem+vw布局
一:vh&vh&vmin&vmax
    vw    视口的占比    width : 100vw   视口的宽度100%;

    vh    width:50vh    宽度为 视口高度 50%;

    vmin   作比较：视口的高和视口的宽做比较，谁小就按照谁设置。

    vmax   做比较：视口的高和视口的宽做比较，谁打就按照谁设置。

适配：
        让整体的rem的大小。随着视口发生变化。(目的:给移动端添加一个统一的换算单位工具且跟随视口变化而变化)

        ->html  的 font-size值 跟随视口发生变化。
        -> 视口变大，html  的font-size变大
        -> 视口缩小，html  的font-size变小
        -> html的font-size变小 rem比例变小
        -> html的font-size变大 rem比例变大
研究：
        100px == ?vw 

        px   和  vw之间 怎么确定换算关系：依赖设备（从设计图入手）

        第一种情况：
            例如：设计图 宽度 750px
            考虑设备像素比例dpr  为  2
            750px / 2 == 375px
            适配的核心设备（iphone 6/7/8）
            设备视口宽度 375px
            100vw == 375px

            1vw == 3.75px
            ?vw == 100px

            26.67vw == 100px

        第二种情况：
            例如：设计图 宽度 640px;
            考虑dpr 2
            640px / 2 == 320px
            适配核心设备（iphone 5）
            设备视口的宽 320px
            100vw == 320px
            1vw == 3.2px
            ?vw == 100px
            31.25vw == 100px
记住一句话：
        如果你是用 vw + 结合 rem 做页面布局适配:

        UI设计图为 750px   html{font-size:26.67vw}
        UI设计图为 640px   html{font-size:31.25vw}

